name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Lint code
      run: npm run lint
    
    - name: Type check
      run: |
        cd tekton-pipeline-renderer && npm run typecheck
        cd ../tekton-vscode && npm run typecheck
    
    - name: Run renderer tests
      run: npm run test:renderer
    
    - name: Build renderer package
      run: npm run build:renderer
    
    - name: Propagate changes
      run: npm run propagate
    
    - name: Build VSCode extension
      run: npm run build:vscode
    
    - name: Run VSCode extension tests
      run: npm run test:vscode
      env:
        DISPLAY: ':99.0'
      continue-on-error: true # VSCode tests can be flaky in CI
    
    - name: Package VSCode extension
      run: npm run vscode:package
    
    - name: Upload VSCode extension artifact
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension-${{ matrix.node-version }}
        path: tekton-vscode/*.vsix
    
    - name: Upload renderer package artifact
      uses: actions/upload-artifact@v4
      with:
        name: npm-package-${{ matrix.node-version }}
        path: tekton-pipeline-renderer/dist/

  release-check:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run complete release check
      run: npm run release:check
    
    - name: Check if ready for release
      run: |
        echo "âœ… All checks passed - packages are ready for release"
        echo "ðŸ“¦ NPM Package: Run 'npm run npm:publish' to publish"
        echo "ðŸ”Œ VSCode Extension: Run 'npm run vscode:package' to create .vsix file" 