name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      
      - name: Lint code
        run: npm run lint
      
      - name: Run renderer tests
        run: npm run test:renderer
      
      - name: Build renderer package
        run: npm run build:renderer
      
      - name: Propagate changes to VSCode extension
        run: npm run propagate
      
      - name: Run VSCode extension tests (Node.js 20+ only)
        if: matrix.node-version == '20.x'
        run: npm run test:vscode
      
      - name: Build VSCode extension (Node.js 20+ only)
        if: matrix.node-version == '20.x'
        run: npm run build:extension
      
      - name: Package VSCode extension (Node.js 20+ only)
        if: matrix.node-version == '20.x'
        run: npm run vscode:package

  release-check:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run complete release check
      run: npm run release:check
    
    - name: Check if ready for release
      run: |
        echo "âœ… All checks passed - packages are ready for release"
        echo "ðŸ“¦ NPM Package: Run 'npm run npm:publish' to publish"
        echo "ðŸ”Œ VSCode Extension: Run 'npm run vscode:package' to create .vsix file" 